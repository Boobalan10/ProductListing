{"version":3,"file":"static/js/931.9a92343f.chunk.js","mappings":"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","sources":["webpack://clo-assessment/./src/Assets/Css/FilterForm.module.css?f80c","Components/FilterForm/FilterForm.jsx","Components/ProductCard/ProductCard.jsx","Store/Selectors.js","Views/ProductListView/ProductListView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"FilterForm_filterBox__ydm8X\",\"searchSec\":\"FilterForm_searchSec__Rq3DQ\",\"search-box\":\"FilterForm_search-box__kFqCG\",\"slideValue\":\"FilterForm_slideValue__6Atwx\"};","import { useState } from 'react';\nimport { Assets } from '../../Assets/Assets';\nimport style from '../../Assets/Css/FilterForm.module.css';\nimport RangeSlider from \"react-range-slider-input\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchText, toggleCategory, setPriceRange, setSortBy, setReset } from '../../Slices/FilterSlice';\n\nfunction FilterForm() {\n\n    const checkBoxValue = ['Paid', 'Free', 'View Only'];\n\n    const [rangeValue, setRangeValue] = useState([0, 999]);\n\n    const filters = useSelector(state => state.filters);\n\n    const dispatch = useDispatch();\n\n    function handleClick(e) {\n        e.preventDefault();\n        dispatch(setReset())\n    }\n\n    return (\n        <form>\n            <div className={`${style.searchSec} mb-4`}>\n                <div className='search-box col-12 col-sm-10 col-lg-8 mx-auto px-0'>\n                    <input type=\"text\" className=\"border-0 w-100\" placeholder=\"search\" name='search'\n                        value={filters.searchText}\n                        onChange={(e) => dispatch(setSearchText(e.target.value))}\n                    />\n                    <img src={Assets.SearchIcon} alt=\"search-icon\" />\n                </div>\n            </div>\n            <div className={`${style.filterBox} row justify-content-between mx-0 py-2`}>\n                <div className='col-12 col-md-10 col-xl-11'>\n                    <div className='row align-items-center mx-0'>\n                        <div className='checkbox-sec col-12 col-md-6 col-xl-4 px-0 mb-2'>\n                            <label className='mr-3'> Pricing Option</label>\n                            {checkBoxValue.map((item) => (\n                                <div className=\"form-check form-check-inline\" key={item}>\n                                    <input className=\"form-check-input\" type=\"checkbox\" value={item}\n                                        checked={filters.selectedCategories.includes(item)}\n                                        onChange={() => dispatch(toggleCategory(item))}\n                                    />\n                                    <label className=\"form-check-label\">{item}</label>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='range-slide-sec col-12 col-md-6 col-xl-4 px-0 mb-2'>\n                            <label className='mr-3'>Price Filter</label>\n                            <div className={`${style.slideValue} d-flex mt-2 align-items-center`}>\n                                <input type=\"number\" value={rangeValue[0]} readOnly />\n                                <RangeSlider value={rangeValue} min={0} max={999}\n                                    disabled={!filters.selectedCategories.includes('Paid')}\n                                    onInput={(e) => {\n                                        setRangeValue(e);\n                                        dispatch(setPriceRange(e));\n                                    }} />\n                                <input type=\"number\" value={rangeValue[1]} readOnly />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button className='bg-transparent border-0 col-12 col-md-2 col-xl-1' onClick={handleClick}><img src={Assets.ResetIcon} alt=\"resetIcon\" />Reset</button>\n            </div>\n            <div className='sort-sec mt-4 text-right'>\n                <span>SortBy</span>\n                <select value={filters.sortBy} onChange={(e) => dispatch(setSortBy(e.target.value))}>\n                    <option value=\"none\">Sort</option>\n                    <option value=\"lowToHigh\">Low to High</option>\n                    <option value=\"highToLow\">High to Low</option>\n                </select>\n            </div>\n        </form>\n    )\n}\n\nexport default FilterForm\n","\nfunction ProductCard({ productData }) {\n\n    return (\n        <div className='card-sec d-flex flex-column h-100'>\n            <div className='product-img-sec h-100'>\n                <img src={productData.imagePath} alt=\"productImage\" />\n            </div>\n            <div className='product-content row justify-content-between mx-0 mt-2'>\n                <div className='product-details'>\n                    <p className='mb-1'>{productData.creator}</p>\n                    <h5 className='mb-0'>{productData.title}</h5>\n                </div>\n                <div className='price'>\n                    <h5>{productData.pricingOption === 0 ? `$${productData.price}` : productData.pricingOption === 1 ? 'FREE' : productData.pricingOption === 2 ? 'View Only' : ''}</h5>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductCard\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst categoryLabelToOption = {\n    'Paid': 0,\n    'Free': 1,\n    'View Only': 2,\n};\n\nexport const selectFilteredProducts = createSelector(\n    [(state) => state.products, (state) => state.filters],\n    (products, filters) => {\n        let filtered = [...products];\n\n        if (filters.searchText) {\n            filtered = filtered.filter(p =>\n                p.title.toLowerCase().includes(filters.searchText.toLowerCase())\n            );\n        }\n\n        if (filters.selectedCategories.length > 0) {\n            const selectedOptions = filters.selectedCategories.map(label => categoryLabelToOption[label]);\n            filtered = filtered.filter(p => selectedOptions.includes(p.pricingOption));\n        }\n\n        const [min, max] = filters.priceRange;\n        filtered = filtered.filter(p => p.price >= min && p.price <= max);\n\n        if (filters.sortBy === 'lowToHigh') {\n            filtered.sort((a, b) => a.price - b.price);\n        } else if (filters.sortBy === 'highToLow') {\n            filtered.sort((a, b) => b.price - a.price);\n        }\n\n        return filtered;\n    }\n);\n","import { useEffect, useState, useCallback, useMemo } from 'react';\nimport FilterForm from '../../Components/FilterForm/FilterForm';\nimport ProductCard from '../../Components/ProductCard/ProductCard';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFiltersFromURL } from '../../Slices/FilterSlice';\nimport { fetchProducts } from '../../Slices/ProductSlice';\nimport { selectFilteredProducts } from '../../Store/Selectors';\nimport { useInView } from 'react-intersection-observer';\nimport { Assets } from '../../Assets/Assets';\n\nfunction ProductListView() {\n\n    const dispatch = useDispatch();\n\n    const filters = useSelector(state => state.filters);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const products = useSelector(selectFilteredProducts);\n\n    const [page, setPage] = useState(0);\n\n    const { ref, inView } = useInView();\n\n    const limit = 10;\n\n    useEffect(() => {\n        const filtersFromURL = {\n            searchText: searchParams.get('search') || '',\n            selectedCategories: searchParams.get('categories')?.split(',') || [],\n            priceRange: searchParams.get('price')?.split('-').map(Number) || [0, 999],\n            sortBy: searchParams.get('sort') || 'none'\n        };\n        dispatch(setFiltersFromURL(filtersFromURL));\n    }, [searchParams, dispatch]);\n\n    const validateSet = useCallback((filters) => {\n        const params = {};\n        if (filters.searchText) params.search = filters.searchText;\n        if (filters.selectedCategories?.length) params.categories = filters.selectedCategories.join(',');\n        if (filters.priceRange && (filters.priceRange[0] !== 0 || filters.priceRange[1] !== 999)) {\n            params.price = filters.priceRange.join('-');\n        }\n        if (filters.sortBy !== 'none') params.sort = filters.sortBy;\n        return params;\n    }, []);\n\n    const paramData = useMemo(() => validateSet(filters), [filters, validateSet]);\n\n    useEffect(() => {\n        setSearchParams(paramData)\n    }, [paramData, setSearchParams]);\n\n    useEffect(() => {\n        dispatch(fetchProducts());\n    }, [dispatch]);\n\n    const visibleProducts = useMemo(() => {\n        return products.slice(0, page * limit);\n    }, [products, page]);\n\n    const flagStop = visibleProducts.length < products.length;\n\n    useEffect(() => {\n        if (inView && flagStop) {\n            setPage((prev) => prev + 1);\n        }\n    }, [inView, flagStop]);\n\n    console.log('sliced', visibleProducts)\n    console.log('page', page)\n\n    return (\n        <section className='product-view mt-4'>\n            <section className='filter-sec mb-5 container-fluid'>\n                <FilterForm />\n            </section>\n            <section className='product-data py-4'>\n                <div className='container-fluid'>\n                    <div className='row'>\n                        {visibleProducts?.map((item) => (\n                            <div className='col-12 col-sm-6 col-md-4 col-xl-3 mb-5' key={item.id}>\n                                <ProductCard productData={item} />\n                            </div>\n                        ))}\n                    </div>\n                    <div ref={ref} className='text-center'>{page * limit < products.length ? <img src={Assets.LoadingIcon} alt='loadingIcon' /> : ''}</div>\n                </div>\n            </section>\n        </section>\n    )\n}\n\nexport default ProductListView\n"],"names":["rangeValue","setRangeValue","useState","filters","useSelector","state","dispatch","useDispatch","_jsxs","children","_jsx","className","concat","style","type","placeholder","name","value","searchText","onChange","e","setSearchText","target","src","Assets","SearchIcon","alt","map","item","checked","selectedCategories","includes","toggleCategory","readOnly","RangeSlider","min","max","disabled","onInput","setPriceRange","onClick","preventDefault","setReset","ResetIcon","sortBy","setSortBy","_ref","productData","imagePath","creator","title","pricingOption","price","categoryLabelToOption","selectFilteredProducts","createSelector","products","filtered","filter","p","toLowerCase","length","selectedOptions","label","priceRange","sort","a","b","searchParams","setSearchParams","useSearchParams","page","setPage","ref","inView","useInView","useEffect","_searchParams$get","_searchParams$get2","filtersFromURL","get","split","Number","setFiltersFromURL","validateSet","useCallback","_filters$selectedCate","params","search","categories","join","paramData","useMemo","fetchProducts","visibleProducts","slice","flagStop","prev","console","log","FilterForm","ProductCard","id","LoadingIcon"],"sourceRoot":""}